package com.ustcweather.amarishappilees.db;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Environment;
import android.widget.Toast;

public class DataBase {

	public DataBase() {

	}

	public void readDataBase( ) {
		String dbPath = Environment.getExternalStorageDirectory() + "/ChinaCity.db";
		File dbFile = new File(dbPath);
		if (!dbFile.exists()) {
			return;
		}
		SQLiteDatabase db = SQLiteDatabase.openDatabase(dbPath, null, SQLiteDatabase.OPEN_READWRITE);
		StringBuffer sb = new StringBuffer();
		Cursor cursor = db.rawQuery("select * from china_provinces_code", null);
		while (cursor.moveToNext()) {
			int id = cursor.getInt(cursor.getColumnIndex("_id"));
			String name = cursor.getString(cursor.getColumnIndex("name"));
			sb.append(id + ":" + name + " \n");
		}
		System.out.println(sb.toString());
	}

	public void copyDataBase(Context context) {
		String dbName = "ChinaCity.db";
		String dbPath = null;
		
		dbPath = Environment.getExternalStorageDirectory() + File.separator+ dbName;
		if ( !Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {
			return; // 未挂载外部存储，拷贝到内部不用判断
		}

		File dbFile = new File(dbPath);
		if (!dbFile.exists()) {
			try {
				dbFile.createNewFile();
			} catch (IOException e1) {
				e1.printStackTrace();
				return;
			}		
			try {
				InputStream ip = context.getResources().getAssets().open(dbName);
				OutputStream op = new FileOutputStream(dbPath);
	
				byte[] buffer = new byte[1024];
				int length = 0;
				while ((length = ip.read(buffer)) > 0) {
					op.write(buffer, 0, length);
				}
				op.flush();
				op.close();
				ip.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
}
