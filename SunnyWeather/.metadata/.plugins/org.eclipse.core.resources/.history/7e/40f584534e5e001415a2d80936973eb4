package com.ustcweather.amarishappilees;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import com.ustcweather.amarishappilees.db.DataBase;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.os.Environment;
import android.support.v4.app.FragmentActivity;


public class CityActivity extends FragmentActivity {
	
	private static Context context;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.city_main);	
		initCityDatabase();
	} 
	
public void copyDataBase(int where) {
		
		// 每个应用都有一个数据库目录，他位于 /data/data/yourpackagename/databases/目录下
		String packageName = getPackageName();// xml中配置的:"com.ttdevs.citydata"
		String dbName = "ChinaCity.db";
		String dbPath = null;
		if (where == 1) { // sdcard
			dbPath = Environment.getExternalStorageDirectory() + File.separator + dbName;
		} else { // local
			dbPath = "/data/data/" + packageName + "/databases/" + dbName;
		}

		if (where == 2) {
			new File("/data/data/" + packageName + "/databases/").mkdirs();
		}

		if (where == 1 && !Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {
			return; // 未挂载外部存储，拷贝到内部不用判断
		}

		File dbFile = new File(dbPath);
		if (dbFile.exists()) {
			dbFile.delete();
		}
		try {
			dbFile.createNewFile();
		} catch (IOException e1) {
			e1.printStackTrace();
			return;
		}

		try {
			InputStream is = context.getResources().getAssets().open(dbName);
			OutputStream os = new FileOutputStream(dbPath);

			byte[] buffer = new byte[1024];
			int length = 0;
			while ((length = is.read(buffer)) > 0) {
				os.write(buffer, 0, length);
			}

			os.flush();
			os.close();
			is.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public void readDataBaseFromSDCard() {
		String dbPath = Environment.getExternalStorageDirectory() + "/ChinaCity.db";
		
		File dbFile = new File(dbPath);
		if (!dbFile.exists()) {
			return;
		}
		
		SQLiteDatabase db = SQLiteDatabase.openDatabase(dbPath, null, SQLiteDatabase.OPEN_READWRITE);
		StringBuffer sb = new StringBuffer();
		Cursor cursor = db.rawQuery("select * from china_provinces_code", null);
		while (cursor.moveToNext()) {
			int id = cursor.getInt(cursor.getColumnIndex("_id"));  
	        String name = cursor.getString(cursor.getColumnIndex("name"));  
	        sb.append(id + ":" + name + " \n");
		}
		System.out.println(sb.toString());
	}
}

