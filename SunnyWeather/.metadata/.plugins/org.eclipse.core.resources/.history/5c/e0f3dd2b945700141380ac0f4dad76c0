package com.ustcweather.amarishappilees.http;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.ustcweather.amarishappilees.weatherinfo.WeatherRelativeInfo;

public class DecodeJson {

	public DecodeJson() {

	}

	public static WeatherRelativeInfo getJsonInfo(String json) {
		// JSONObject decodeObject = JSONObject.fromObject(json);
		JSONObject jsonObj;
		try {
			jsonObj = new JSONObject(json);

			if (jsonObj.getInt("error") != 0) {
				return null;
			}
			String status = jsonObj.getString("status");
			String date = jsonObj.getString("date");
			
			JSONArray results = jsonObj.getJSONArray("results");
			JSONObject results0 = results.getJSONObject(0);
			String currentCity = results0.getString("currentCity");
			String pm = results0.getString("pm25");
			
			/*Today weather information*/
			JSONArray weatherData = results0.getJSONArray("weather_data");
			JSONObject weatherToday = weatherData.getJSONObject(0);
			String todayDate = weatherToday.getString("date");
			String todayWeather = weatherToday.getString("weather");
			String todayWind = weatherToday.getString("wind");
			String todayTempera = weatherToday.getString("temperature");
			
			/*Tomorrow weather information*/
			JSONObject weatherTomorrow = weatherData.getJSONObject(1);
			String tomorrowDate = weatherToday.getString("date");
			String tomorrowWeather = weatherToday.getString("weather");
			String tomorrowTempera = weatherToday.getString("temperature");
			
			/*The day after tomorrow weather information*/
			JSONObject weatherAfTomo = weatherData.getJSONObject(2);
			String afTomoDate = weatherToday.getString("date");
			String afTomoWeather = weatherToday.getString("weather");
			String afTomoTempera = weatherToday.getString("temperature");
			
			/*The last day weather information*/
			JSONObject weatherLast = weatherData.getJSONObject(3);
			String lastDate = weatherToday.getString("date");
			String lastWeather = weatherToday.getString("weather");
			String lastTempera = weatherToday.getString("temperature");
			
			WeatherRelativeInfo weatherReInfo = new WeatherRelativeInfo();
			weatherReInfo.setCurrentCity(currentCity);
			weatherReInfo.setDate(date);
			weatherReInfo.setPm(pm);
			weatherReInfo.setTodayDate(todayDate);
			return weatherReInfo;
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
	}
}
