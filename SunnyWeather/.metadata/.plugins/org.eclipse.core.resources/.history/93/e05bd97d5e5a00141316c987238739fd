package com.ustcweather.amarishappilees;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import com.ustcweather.amarishappilees.http.DecodeJson;
import com.ustcweather.amarishappilees.http.HttpOperate;
import com.ustcweather.amarishappilees.ui.MyCityEntity;
import com.ustcweather.amarishappilees.weatherinfo.WeatherRelativeInfo;

import android.app.Activity;
import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.support.v4.widget.DrawerLayout;
import android.widget.TextView;

public class MainActivity extends ActionBarActivity implements
		NavigationDrawerFragment.NavigationDrawerCallbacks {

	/**
	 * Fragment managing the behaviors, interactions and presentation of the
	 * navigation drawer.
	 */
	private NavigationDrawerFragment mNavigationDrawerFragment;

	/**
	 * Used to store the last screen title. For use in
	 * {@link #restoreActionBar()}.
	 */
	private CharSequence mTitle;
	private String[] weatherInfo;

	private static TextView textTodayTempera;
	private static TextView textTodayWeather;
	private static TextView textTodayUp;
	private static TextView textTodayDown;

	private String city = "苏州";
	private static ExecutorService LIMITED_TASK_EXECUTOR  = (ExecutorService) Executors.newFixedThreadPool(7);

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		mNavigationDrawerFragment = (NavigationDrawerFragment) getSupportFragmentManager()
				.findFragmentById(R.id.navigation_drawer);
		mTitle = getTitle();
		// Set up the drawer.
		mNavigationDrawerFragment.setUp(R.id.navigation_drawer,
				(DrawerLayout) findViewById(R.id.drawer_layout));
		
		weatherInfo = new String[10];
		getData();
	}
	
	class MyAsyncTask extends AsyncTask<String, Integer, String[]> {

		@Override
		protected String[] doInBackground(String... params) {
			// TODO Auto-generated method stub
			
			String httpGetString = HttpOperate.getWeatherInformation(city);
			WeatherRelativeInfo weatherReInfo = new WeatherRelativeInfo();
			weatherReInfo = DecodeJson.getJsonInfo(httpGetString);
			weatherInfo[0] = weatherReInfo.getTodayWeather(); 
			String todayDate = weatherReInfo.getTodayDate();
			weatherInfo[1] = todayDate;//.substring(14, 16);
			String todayTempRange = weatherReInfo.getTodayTempera();
			weatherInfo[2] = todayTempRange.substring(0, 3);
			weatherInfo[3] = todayTempRange.substring(3);

			return weatherInfo;
		}

		@Override
		protected void onPostExecute(String[] result) {
			// TODO Auto-generated method stub
			// super.onPostExecute(result);
			textTodayTempera.setText(weatherInfo[1]);
			textTodayWeather.setText(weatherInfo[0]);
			textTodayUp.setText(weatherInfo[2]);
			textTodayDown.setText(weatherInfo[3]);
		}
	}
	
	private  void getData() {
		MyAsyncTask task = new MyAsyncTask();
		task.executeOnExecutor(LIMITED_TASK_EXECUTOR);
	}
	
	@Override
	public void onPause() {
		super.onPause();
	}

	@Override
	public void onNavigationDrawerItemSelected(int position, String myCityName) {
		// update the main content by replacing fragments
		FragmentManager fragmentManager = getSupportFragmentManager();
		fragmentManager
				.beginTransaction()
				.replace(R.id.container,
						PlaceholderFragment.newInstance(position + 1)).commit();
		city = myCityName;
	}

	public void onSectionAttached(int number) {
		switch (1) {
		case 1:
//			mTitle = getString(R.string.title_section1);
			mTitle = city;
//			city = "苏州";
			getData();
			break;
		case 2:
			mTitle = getString(R.string.title_section2);
			city = "合肥";
			getData();
			break;
		case 3:
			mTitle = getString(R.string.title_section3);
			city = "成都";
			getData();
			break;
		}
	}

	public void restoreActionBar() {
		ActionBar actionBar = getSupportActionBar();
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
		actionBar.setDisplayShowTitleEnabled(true);
		actionBar.setTitle(mTitle);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		if (!mNavigationDrawerFragment.isDrawerOpen()) {
			// Only show items in the action bar relevant to this screen
			// if the drawer is not showing. Otherwise, let the drawer
			// decide what to show in the action bar.
			getMenuInflater().inflate(R.menu.main, menu);
			restoreActionBar();
			return true;
		} 
		return super.onCreateOptionsMenu(menu);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {
		/**
		 * The fragment argument representing the section number for this
		 * fragment.
		 */
		private static final String ARG_SECTION_NUMBER = "section_number";

		/**
		 * Returns a new instance of this fragment for the given section number.
		 */
		public static PlaceholderFragment newInstance(int sectionNumber) {
			PlaceholderFragment fragment = new PlaceholderFragment();
			Bundle args = new Bundle();
			args.putInt(ARG_SECTION_NUMBER, sectionNumber);
			fragment.setArguments(args);
			return fragment;
		}

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_main, container,
					false);
			textTodayTempera = (TextView) rootView.findViewById(R.id.textView_today_temperature);
			textTodayWeather = (TextView) rootView.findViewById(R.id.textView_today_weather);
			textTodayUp= (TextView) rootView.findViewById(R.id.textView_today_up);
			textTodayDown = (TextView) rootView.findViewById(R.id.textView_today_down);

			return rootView;
		}

		@Override
		public void onAttach(Activity activity) {
			super.onAttach(activity);
			((MainActivity) activity).onSectionAttached(getArguments().getInt(
					ARG_SECTION_NUMBER));
		}
	}
}
